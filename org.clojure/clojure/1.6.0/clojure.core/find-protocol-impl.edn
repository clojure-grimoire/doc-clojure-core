{:type :fn, :src "(defn find-protocol-impl [protocol x]\n  (if (instance? (:on-interface protocol) x)\n    x\n    (let [c (class x)\n          impl #(get (:impls protocol) %)]\n      (or (impl c)\n          (and c (or (first (remove nil? (map impl (butlast (super-chain c)))))\n                     (when-let [t (reduce1 pref (filter impl (disj (supers c) Object)))]\n                       (impl t))\n                     (impl Object)))))))", :ns "clojure.core", :name "find-protocol-impl", :file "clojure/core_deftype.clj", :column 1, :line 496, :arglists ([protocol x])}