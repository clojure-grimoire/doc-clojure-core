{:added "1.2", :ns "clojure.core", :name "flatten", :file "clojure/core.clj", :static true, :type :fn, :src "(defn flatten\n  \"Takes any nested combination of sequential things (lists, vectors,\n  etc.) and returns their contents as a single, flat sequence.\n  (flatten nil) returns an empty sequence.\"\n  {:added \"1.2\"\n   :static true}\n  [x]\n  (filter (complement sequential?)\n          (rest (tree-seq sequential? seq x))))", :column 1, :line 6841, :arglists ([x]), :doc "Takes any nested combination of sequential things (lists, vectors,\n  etc.) and returns their contents as a single, flat sequence.\n  (flatten nil) returns an empty sequence."}