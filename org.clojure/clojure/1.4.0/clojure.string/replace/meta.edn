{:arglists ([s match replacement]), :ns "clojure.string", :name "replace", :src "(defn ^String replace\n  \"Replaces all instance of match with replacement in s.\n\n   match/replacement can be:\n\n   string / string\n   char / char\n   pattern / (string or function of match).\n\n   See also replace-first.\"\n  {:added \"1.2\"}\n  [^CharSequence s match replacement]\n  (let [s (.toString s)]\n    (cond \n     (instance? Character match) (.replace s ^Character match ^Character replacement)\n     (instance? CharSequence match) (.replace s ^CharSequence match ^CharSequence replacement)\n     (instance? Pattern match) (if (instance? CharSequence replacement)\n                                 (.replaceAll (re-matcher ^Pattern match s)\n                                              (.toString ^CharSequence replacement))\n                                 (replace-by s match replacement))\n     :else (throw (IllegalArgumentException. (str \"Invalid match arg: \" match))))))", :added "1.2", :type :fn, :doc "Replaces all instance of match with replacement in s.\n\n   match/replacement can be:\n\n   string / string\n   char / char\n   pattern / (string or function of match).\n\n   See also replace-first.", :line 63, :file "clojure/string.clj", :tag java.lang.String}