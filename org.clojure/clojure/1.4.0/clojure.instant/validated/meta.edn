{:type :fn, :src "(defn validated\n  \"Return a function which constructs and instant by calling constructor\nafter first validting that those arguments are in range and otherwise\nplausible. The resulting function will throw an exception if called\nwith invalid arguments.\"\n  [new-instance]\n  (fn [years months days hours minutes seconds nanoseconds\n       offset-sign offset-hours offset-minutes]\n    (verify (<= 1 months 12))\n    (verify (<= 1 days (days-in-month months (leap-year? years))))\n    (verify (<= 0 hours 23))\n    (verify (<= 0 minutes 59))\n    (verify (<= 0 seconds (if (= minutes 59) 60 59)))\n    (verify (<= 0 nanoseconds 999999999))\n    (verify (<= -1 offset-sign 1))\n    (verify (<= 0 offset-hours 23))\n    (verify (<= 0 offset-minutes 59))\n    (new-instance years months days hours minutes seconds nanoseconds\n                  offset-sign offset-hours offset-minutes)))", :ns "clojure.instant", :name "validated", :arglists ([new-instance]), :doc "Return a function which constructs and instant by calling constructor\nafter first validting that those arguments are in range and otherwise\nplausible. The resulting function will throw an exception if called\nwith invalid arguments.", :line 136, :file "clojure/instant.clj"}