{:type :fn, :src "(defn union\n  \"Return a set that is the union of the input sets\"\n  {:added \"1.0\"}\n  ([] #{})\n  ([s1] s1)\n  ([s1 s2]\n     (if (< (count s1) (count s2))\n       (reduce conj s2 s1)\n       (reduce conj s1 s2)))\n  ([s1 s2 & sets]\n     (let [bubbled-sets (bubble-max-key count (conj sets s2 s1))]\n       (reduce into (first bubbled-sets) (rest bubbled-sets)))))", :ns "clojure.set", :name "union", :arglists ([] [s1] [s1 s2] [s1 s2 & sets]), :added "1.0", :doc "Return a set that is the union of the input sets", :line 19, :file "clojure/set.clj"}