{:type :fn, :src "(defn copy\n  \"Copies input to output.  Returns nil or throws IOException.\n  Input may be an InputStream, Reader, File, byte[], or String.\n  Output may be an OutputStream, Writer, or File.\n\n  Options are key/value pairs and may be one of\n\n    :buffer-size  buffer size to use, default is 1024.\n    :encoding     encoding to use if converting between\n                  byte and char streams.   \n\n  Does not close any streams except those it opens itself \n  (on a File).\"\n  {:added \"1.2\"}\n  [input output & opts]\n  (do-copy input output (when opts (apply hash-map opts))))", :ns "clojure.java.io", :name "copy", :arglists ([input output & opts]), :added "1.2", :doc "Copies input to output.  Returns nil or throws IOException.\n  Input may be an InputStream, Reader, File, byte[], or String.\n  Output may be an OutputStream, Writer, or File.\n\n  Options are key/value pairs and may be one of\n\n    :buffer-size  buffer size to use, default is 1024.\n    :encoding     encoding to use if converting between\n                  byte and char streams.   \n\n  Does not close any streams except those it opens itself \n  (on a File).", :line 380, :file "clojure/java/io.clj"}