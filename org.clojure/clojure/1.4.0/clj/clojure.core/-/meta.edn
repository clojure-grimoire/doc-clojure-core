{:arglists ([x] [x y] [x y & more]), :ns "clojure.core", :name "-", :src "(defn -\n  \"If no ys are supplied, returns the negation of x, else subtracts\n  the ys from x and returns the result. Does not auto-promote\n  longs, will throw on overflow. See also: -'\"\n  {:inline (nary-inline 'minus 'unchecked_minus)\n   :inline-arities >0?\n   :added \"1.2\"}\n  ([x] (. clojure.lang.Numbers (minus x)))\n  ([x y] (. clojure.lang.Numbers (minus x y)))\n  ([x y & more]\n     (reduce1 - (- x y) more)))", :added "1.2", :type :fn, :inline-arities #<core$_GT_0_QMARK_ clojure.core$_GT_0_QMARK_@7180e701>, :doc "If no ys are supplied, returns the negation of x, else subtracts\n  the ys from x and returns the result. Does not auto-promote\n  longs, will throw on overflow. See also: -'", :line 979, :file "clojure/core.clj"}