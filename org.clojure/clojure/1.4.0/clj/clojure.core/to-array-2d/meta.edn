{:arglists ([coll]), :ns "clojure.core", :name "to-array-2d", :src "(defn to-array-2d\n  \"Returns a (potentially-ragged) 2-dimensional array of Objects\n  containing the contents of coll, which can be any Collection of any\n  Collection.\"\n  {:tag \"[[Ljava.lang.Object;\"\n   :added \"1.0\"\n   :static true}\n  [^java.util.Collection coll]\n    (let [ret (make-array (. Class (forName \"[Ljava.lang.Object;\")) (. coll (size)))]\n      (loop [i 0 xs (seq coll)]\n        (when xs\n          (aset ret i (to-array (first xs)))\n          (recur (inc i) (next xs))))\n      ret))", :added "1.0", :static true, :type :fn, :doc "Returns a (potentially-ragged) 2-dimensional array of Objects\n  containing the contents of coll, which can be any Collection of any\n  Collection.", :line 3543, :file "clojure/core.clj", :tag "[[Ljava.lang.Object;"}