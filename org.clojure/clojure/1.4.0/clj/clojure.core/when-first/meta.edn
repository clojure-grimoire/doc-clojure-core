{:arglists ([bindings & body]), :ns "clojure.core", :name "when-first", :src "(defmacro when-first\n  \"bindings => x xs\n\n  Same as (when (seq xs) (let [x (first xs)] body))\"\n  {:added \"1.0\"}\n  [bindings & body]\n  (assert-args\n     (vector? bindings) \"a vector for its binding\"\n     (= 2 (count bindings)) \"exactly 2 forms in binding vector\")\n  (let [[x xs] bindings]\n    `(when (seq ~xs)\n       (let [~x (first ~xs)]\n         ~@body))))", :added "1.0", :type :macro, :doc "bindings => x xs\n\n  Same as (when (seq xs) (let [x (first xs)] body))", :macro true, :line 4054, :file "clojure/core.clj"}