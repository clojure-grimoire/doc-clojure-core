{:arglists ([f coll]), :ns "clojure.core", :name "group-by", :src "(defn group-by \n  \"Returns a map of the elements of coll keyed by the result of\n  f on each element. The value at each key will be a vector of the\n  corresponding elements, in the order they appeared in coll.\"\n  {:added \"1.2\"\n   :static true}\n  [f coll]  \n  (persistent!\n   (reduce\n    (fn [ret x]\n      (let [k (f x)]\n        (assoc! ret k (conj (get ret k []) x))))\n    (transient {}) coll)))", :added "1.2", :static true, :type :fn, :doc "Returns a map of the elements of coll keyed by the result of\n  f on each element. The value at each key will be a vector of the\n  corresponding elements, in the order they appeared in coll.", :line 6330, :file "clojure/core.clj"}