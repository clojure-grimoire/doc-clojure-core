{:type :macro, :src "(defmacro definterface \n  [name & sigs]\n  (let [tag (fn [x] (or (:tag (meta x)) Object))\n        psig (fn [[name [& args]]]\n               (vector name (vec (map tag args)) (tag name) (map meta args)))\n        cname (with-meta (symbol (str (namespace-munge *ns*) \".\" name)) (meta name))]\n    `(let [] \n       (gen-interface :name ~cname :methods ~(vec (map psig sigs)))\n       (import ~cname))))", :macro true, :ns "clojure.core", :name "definterface", :arglists ([name & sigs]), :line 20, :file "clojure/core_deftype.clj"}