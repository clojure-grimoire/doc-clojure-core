{:arglists ([map] [map key] [map key & ks]), :ns "clojure.core", :name "dissoc", :src "(defn dissoc\n  \"dissoc[iate]. Returns a new map of the same (hashed/sorted) type,\n  that does not contain a mapping for key(s).\"\n  {:added \"1.0\"\n   :static true}\n  ([map] map)\n  ([map key]\n   (. clojure.lang.RT (dissoc map key)))\n  ([map key & ks]\n   (let [ret (dissoc map key)]\n     (if ks\n       (recur ret (first ks) (next ks))\n       ret))))", :added "1.0", :static true, :type :fn, :doc "dissoc[iate]. Returns a new map of the same (hashed/sorted) type,\n  that does not contain a mapping for key(s).", :line 1398, :file "clojure/core.clj"}