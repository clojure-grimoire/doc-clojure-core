{:arglists ([x]), :ns "clojure.core", :name "flatten", :src "(defn flatten\n  \"Takes any nested combination of sequential things (lists, vectors,\n  etc.) and returns their contents as a single, flat sequence.\n  (flatten nil) returns an empty sequence.\"\n  {:added \"1.2\"\n   :static true}\n  [x]\n  (filter (complement sequential?)\n          (rest (tree-seq sequential? seq x))))", :added "1.2", :static true, :type :fn, :doc "Takes any nested combination of sequential things (lists, vectors,\n  etc.) and returns their contents as a single, flat sequence.\n  (flatten nil) returns an empty sequence.", :line 6320, :file "clojure/core.clj"}