{:arglists ([name & args]), :ns "clojure.core", :name "memfn", :src "(defmacro memfn\n  \"Expands into code that creates a fn that expects to be passed an\n  object and any args and calls the named instance method on the\n  object passing the args. Use when you want to treat a Java method as\n  a first-class fn.\"\n  {:added \"1.0\"}\n  [name & args]\n  `(fn [target# ~@args]\n     (. target# (~name ~@args))))", :added "1.0", :type :macro, :doc "Expands into code that creates a fn that expects to be passed an\n  object and any args and calls the named instance method on the\n  object passing the args. Use when you want to treat a Java method as\n  a first-class fn.", :macro true, :line 3414, :file "clojure/core.clj"}