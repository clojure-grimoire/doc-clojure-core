{:type :fn, :src "(defn root-cause\n  \"Returns the initial cause of an exception or error by peeling off all of\n  its wrappers\"\n  {:added \"1.3\"}\n  [^Throwable t]\n  (loop [cause t]\n    (if (and (instance? clojure.lang.Compiler$CompilerException cause)\n             (not= (.source ^clojure.lang.Compiler$CompilerException cause) \"NO_SOURCE_FILE\"))\n      cause\n      (if-let [cause (.getCause cause)]\n        (recur cause)\n        cause))))", :ns "clojure.repl", :name "root-cause", :arglists ([t]), :added "1.3", :doc "Returns the initial cause of an exception or error by peeling off all of\n  its wrappers", :line 217, :file "clojure/repl.clj"}