{:type :fn, :src "(defn repl-caught\n  \"Default :caught hook for repl\"\n  [e]\n  (let [ex (repl-exception e)\n        tr (.getStackTrace ex)\n        el (when-not (zero? (count tr)) (aget tr 0))]\n    (binding [*out* *err*]\n      (println (str (-> ex class .getSimpleName)\n                    \" \" (.getMessage ex) \" \"\n                    (when-not (instance? clojure.lang.Compiler$CompilerException ex)\n                      (str \" \" (if el (stack-element-str el) \"[trace missing]\"))))))))", :ns "clojure.main", :name "repl-caught", :arglists ([e]), :doc "Default :caught hook for repl", :line 168, :file "clojure/main.clj"}