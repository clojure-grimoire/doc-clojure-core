{:arglists ([x] [x y] [x y & more]), :ns "clojure.core", :name "-'", :src "(defn -'\n  \"If no ys are supplied, returns the negation of x, else subtracts\n  the ys from x and returns the result. Supports arbitrary precision.\n  See also: -\"\n  {:inline (nary-inline 'minusP)\n   :inline-arities >0?\n   :added \"1.0\"}\n  ([x] (. clojure.lang.Numbers (minusP x)))\n  ([x y] (. clojure.lang.Numbers (minusP x y)))\n  ([x y & more]\n   (reduce1 -' (-' x y) more)))", :added "1.0", :type :fn, :inline-arities #<core$_GT_0_QMARK_ clojure.core$_GT_0_QMARK_@6f8d7714>, :doc "If no ys are supplied, returns the negation of x, else subtracts\n  the ys from x and returns the result. Supports arbitrary precision.\n  See also: -", :line 967, :file "clojure/core.clj"}