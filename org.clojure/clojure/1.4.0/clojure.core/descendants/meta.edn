{:type :fn, :src "(defn descendants\n  \"Returns the immediate and indirect children of tag, through a\n  relationship established via derive. h must be a hierarchy obtained\n  from make-hierarchy, if not supplied defaults to the global\n  hierarchy. Note: does not work on Java type inheritance\n  relationships.\"\n  {:added \"1.0\"}\n  ([tag] (descendants global-hierarchy tag))\n  ([h tag] (if (class? tag)\n             (throw (java.lang.UnsupportedOperationException. \"Can't get descendants of classes\"))\n             (not-empty (get (:descendants h) tag)))))", :ns "clojure.core", :name "descendants", :arglists ([tag] [h tag]), :added "1.0", :doc "Returns the immediate and indirect children of tag, through a\n  relationship established via derive. h must be a hierarchy obtained\n  from make-hierarchy, if not supplied defaults to the global\n  hierarchy. Note: does not work on Java type inheritance\n  relationships.", :line 4944, :file "clojure/core.clj"}