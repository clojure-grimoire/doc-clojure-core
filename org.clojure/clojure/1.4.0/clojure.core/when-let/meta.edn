{:arglists ([bindings & body]), :ns "clojure.core", :name "when-let", :src "(defmacro when-let\n  \"bindings => binding-form test\n\n  When test is true, evaluates body with binding-form bound to the value of test\"\n  {:added \"1.0\"}\n  [bindings & body]\n  (assert-args\n     (vector? bindings) \"a vector for its binding\"\n     (= 2 (count bindings)) \"exactly 2 forms in binding vector\")\n   (let [form (bindings 0) tst (bindings 1)]\n    `(let [temp# ~tst]\n       (when temp#\n         (let [~form temp#]\n           ~@body)))))", :added "1.0", :type :macro, :doc "bindings => binding-form test\n\n  When test is true, evaluates body with binding-form bound to the value of test", :macro true, :line 1687, :file "clojure/core.clj"}