{:added "1.0", :ns #object[clojure.lang.Namespace 0x41758fc9 "clojure.set"], :name "union", :file "clojure/set.clj", :type :fn, :src "(defn union\n  \"Return a set that is the union of the input sets\"\n  {:added \"1.0\"}\n  ([] #{})\n  ([s1] s1)\n  ([s1 s2]\n     (if (< (count s1) (count s2))\n       (reduce conj s2 s1)\n       (reduce conj s1 s2)))\n  ([s1 s2 & sets]\n     (let [bubbled-sets (bubble-max-key count (conj sets s2 s1))]\n       (reduce into (first bubbled-sets) (rest bubbled-sets)))))", :column 1, :line 20, :arglists ([] [s1] [s1 s2] [s1 s2 & sets]), :doc "Return a set that is the union of the input sets", :namespace "clojure.set"}