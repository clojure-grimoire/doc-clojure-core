{:added "1.2", :ns #object[clojure.lang.Namespace 0xfd0515a "clojure.string"], :name "escape", :file "clojure/string.clj", :type :fn, :src "(defn ^String escape\n  \"Return a new string, using cmap to escape each character ch\n   from s as follows:\n   \n   If (cmap ch) is nil, append ch to the new string.\n   If (cmap ch) is non-nil, append (str (cmap ch)) instead.\"\n  {:added \"1.2\"}\n  [^CharSequence s cmap]\n  (loop [index (int 0)\n         buffer (StringBuilder. (.length s))]\n    (if (= (.length s) index)\n      (.toString buffer)\n      (let [ch (.charAt s index)]\n        (if-let [replacement (cmap ch)]\n          (.append buffer replacement)\n          (.append buffer ch))\n        (recur (inc index) buffer)))))", :column 1, :line 300, :tag java.lang.String, :arglists ([s cmap]), :doc "Return a new string, using cmap to escape each character ch\n   from s as follows:\n   \n   If (cmap ch) is nil, append ch to the new string.\n   If (cmap ch) is non-nil, append (str (cmap ch)) instead.", :namespace "clojure.string"}