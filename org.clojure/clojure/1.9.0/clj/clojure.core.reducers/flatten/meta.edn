{:added "1.5", :ns #object[clojure.lang.Namespace 0x4528486c "clojure.core.reducers"], :name "flatten", :file "clojure/core/reducers.clj", :type :fn, :src "(defcurried flatten\n  \"Takes any nested combination of sequential things (lists, vectors,\n  etc.) and returns their contents as a single, flat foldable\n  collection.\"\n  {:added \"1.5\"}\n  [coll]\n  (folder coll\n   (fn [f1]\n     (fn\n       ([] (f1))\n       ([ret v]\n          (if (sequential? v)\n            (clojure.core.protocols/coll-reduce (flatten v) f1 ret)\n            (f1 ret v)))))))", :column 1, :line 207, :arglists ([] [coll]), :doc "Takes any nested combination of sequential things (lists, vectors,\n  etc.) and returns their contents as a single, flat foldable\n  collection.", :namespace "clojure.core.reducers"}