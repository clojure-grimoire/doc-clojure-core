{:ns #object[clojure.lang.Namespace 0x1ee98d0d "clojure.main"], :name "with-bindings", :file "clojure/main.clj", :type :macro, :src "(defmacro with-bindings\n  \"Executes body in the context of thread-local bindings for several vars\n  that often need to be set!: *ns* *warn-on-reflection* *math-context*\n  *print-meta* *print-length* *print-level* *compile-path*\n  *command-line-args* *1 *2 *3 *e\"\n  [& body]\n  `(binding [*ns* *ns*\n             *warn-on-reflection* *warn-on-reflection*\n             *math-context* *math-context*\n             *print-meta* *print-meta*\n             *print-length* *print-length*\n             *print-level* *print-level*\n             *print-namespace-maps* true\n             *data-readers* *data-readers*\n             *default-data-reader-fn* *default-data-reader-fn*\n             *compile-path* (System/getProperty \"clojure.compile.path\" \"classes\")\n             *command-line-args* *command-line-args*\n             *unchecked-math* *unchecked-math*\n             *assert* *assert*\n             clojure.spec.alpha/*explain-out* clojure.spec.alpha/*explain-out*\n             *1 nil\n             *2 nil\n             *3 nil\n             *e nil]\n     ~@body))", :column 1, :line 66, :macro true, :arglists ([& body]), :doc "Executes body in the context of thread-local bindings for several vars\n  that often need to be set!: *ns* *warn-on-reflection* *math-context*\n  *print-meta* *print-length* *print-level* *compile-path*\n  *command-line-args* *1 *2 *3 *e", :namespace "clojure.main"}