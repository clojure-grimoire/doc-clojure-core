{:line 48, :column 1, :file "clojure/reflect.clj", :name "TypeReference", :ns #object[clojure.lang.Namespace 0x6572bcb5 "clojure.reflect"], :doc "A TypeReference can be unambiguously converted to a type name on\n   the host platform.\n\n   All typerefs are normalized into symbols. If you need to\n   normalize a typeref yourself, call typesym.", :src "(defprotocol TypeReference\n  \"A TypeReference can be unambiguously converted to a type name on\n   the host platform.\n\n   All typerefs are normalized into symbols. If you need to\n   normalize a typeref yourself, call typesym.\"\n  (typename [o] \"Returns Java name as returned by ASM getClassName, e.g. byte[], java.lang.String[]\"))", :type :var, :namespace "clojure.reflect"}