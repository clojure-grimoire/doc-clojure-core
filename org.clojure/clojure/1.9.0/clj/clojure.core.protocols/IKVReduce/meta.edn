{:line 175, :column 1, :file "clojure/core/protocols.clj", :name "IKVReduce", :ns #object[clojure.lang.Namespace 0x6b89b36d "clojure.core.protocols"], :doc "Protocol for concrete associative types that can reduce themselves\n   via a function of key and val faster than first/next recursion over map\n   entries. Called by clojure.core/reduce-kv, and has same\n   semantics (just different arg order).", :src "(defprotocol IKVReduce\n  \"Protocol for concrete associative types that can reduce themselves\n   via a function of key and val faster than first/next recursion over map\n   entries. Called by clojure.core/reduce-kv, and has same\n   semantics (just different arg order).\"\n  (kv-reduce [amap f init]))", :type :var, :namespace "clojure.core.protocols"}