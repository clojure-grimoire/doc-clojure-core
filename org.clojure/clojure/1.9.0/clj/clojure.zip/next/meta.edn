{:added "1.0", :ns #object[clojure.lang.Namespace 0x4ac51b14 "clojure.zip"], :name "next", :file "clojure/zip.clj", :type :fn, :src "(defn next\n  \"Moves to the next loc in the hierarchy, depth-first. When reaching\n  the end, returns a distinguished loc detectable via end?. If already\n  at the end, stays there.\"\n  {:added \"1.0\"}\n  [loc]\n    (if (= :end (loc 1))\n      loc\n      (or \n       (and (branch? loc) (down loc))\n       (right loc)\n       (loop [p loc]\n         (if (up p)\n           (or (right (up p)) (recur (up p)))\n           [(node p) :end])))))", :column 1, :line 230, :arglists ([loc]), :doc "Moves to the next loc in the hierarchy, depth-first. When reaching\n  the end, returns a distinguished loc detectable via end?. If already\n  at the end, stays there.", :namespace "clojure.zip"}