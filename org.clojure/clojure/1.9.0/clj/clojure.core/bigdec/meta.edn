{:added "1.0", :ns #object[clojure.lang.Namespace 0x264888e7 "clojure.core"], :name "bigdec", :file "clojure/core.clj", :static true, :type :fn, :src "(defn bigdec\n  \"Coerce to BigDecimal\"\n  {:tag BigDecimal\n   :added \"1.0\"\n   :static true}\n  [x] (cond\n       (decimal? x) x\n       (float? x) (. BigDecimal valueOf (double x))\n       (ratio? x) (/ (BigDecimal. (.numerator ^clojure.lang.Ratio x)) (.denominator ^clojure.lang.Ratio x))\n       (instance? clojure.lang.BigInt x) (.toBigDecimal ^clojure.lang.BigInt x)\n       (instance? BigInteger x) (BigDecimal. ^BigInteger x)\n       (number? x) (BigDecimal/valueOf (long x))\n       :else (BigDecimal. x)))", :column 1, :line 3639, :tag java.math.BigDecimal, :arglists ([x]), :doc "Coerce to BigDecimal", :namespace "clojure.core"}