{:added "1.2", :ns #object[clojure.lang.Namespace 0x264888e7 "clojure.core"], :name "definterface", :file "clojure/core_deftype.clj", :type :macro, :src "(defmacro definterface\n  \"Creates a new Java interface with the given name and method sigs.\n  The method return types and parameter types may be specified with type hints,\n  defaulting to Object if omitted.\n\n  (definterface MyInterface\n    (^int method1 [x])\n    (^Bar method2 [^Baz b ^Quux q]))\"\n  {:added \"1.2\"} ;; Present since 1.2, but made public in 1.5.\n  [name & sigs]\n  (let [tag (fn [x] (or (:tag (meta x)) Object))\n        psig (fn [[name [& args]]]\n               (vector name (vec (map tag args)) (tag name) (map meta args)))\n        cname (with-meta (symbol (str (namespace-munge *ns*) \".\" name)) (meta name))]\n    `(let [] \n       (gen-interface :name ~cname :methods ~(vec (map psig sigs)))\n       (import ~cname))))", :column 1, :line 20, :macro true, :arglists ([name & sigs]), :doc "Creates a new Java interface with the given name and method sigs.\n  The method return types and parameter types may be specified with type hints,\n  defaulting to Object if omitted.\n\n  (definterface MyInterface\n    (^int method1 [x])\n    (^Bar method2 [^Baz b ^Quux q]))", :namespace "clojure.core"}