{:added "1.2", :ns #object[clojure.lang.Namespace 0x264888e7 "clojure.core"], :name "get-in", :file "clojure/core.clj", :static true, :type :fn, :src "(defn get-in\n  \"Returns the value in a nested associative structure,\n  where ks is a sequence of keys. Returns nil if the key\n  is not present, or the not-found value if supplied.\"\n  {:added \"1.2\"\n   :static true}\n  ([m ks]\n     (reduce1 get m ks))\n  ([m ks not-found]\n     (loop [sentinel (Object.)\n            m m\n            ks (seq ks)]\n       (if ks\n         (let [m (get m (first ks) sentinel)]\n           (if (identical? sentinel m)\n             not-found\n             (recur sentinel m (next ks))))\n         m))))", :column 1, :line 6062, :arglists ([m ks] [m ks not-found]), :doc "Returns the value in a nested associative structure,\n  where ks is a sequence of keys. Returns nil if the key\n  is not present, or the not-found value if supplied.", :namespace "clojure.core"}