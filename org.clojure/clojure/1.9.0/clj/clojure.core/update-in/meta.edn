{:added "1.0", :ns #object[clojure.lang.Namespace 0x264888e7 "clojure.core"], :name "update-in", :file "clojure/core.clj", :static true, :type :fn, :src "(defn update-in\n  \"'Updates' a value in a nested associative structure, where ks is a\n  sequence of keys and f is a function that will take the old value\n  and any supplied args and return the new value, and returns a new\n  nested structure.  If any levels do not exist, hash-maps will be\n  created.\"\n  {:added \"1.0\"\n   :static true}\n  ([m ks f & args]\n     (let [up (fn up [m ks f args]\n                (let [[k & ks] ks]\n                  (if ks\n                    (assoc m k (up (get m k) ks f args))\n                    (assoc m k (apply f (get m k) args)))))]\n       (up m ks f args))))", :column 1, :line 6092, :arglists ([m ks f & args]), :doc "'Updates' a value in a nested associative structure, where ks is a\n  sequence of keys and f is a function that will take the old value\n  and any supplied args and return the new value, and returns a new\n  nested structure.  If any levels do not exist, hash-maps will be\n  created.", :namespace "clojure.core"}