{:added "1.0", :ns #object[clojure.lang.Namespace 0x264888e7 "clojure.core"], :name "delay", :file "clojure/core.clj", :type :macro, :src "(defmacro delay\n  \"Takes a body of expressions and yields a Delay object that will\n  invoke the body only the first time it is forced (with force or deref/@), and\n  will cache the result and return it on all subsequent force\n  calls. See also - realized?\"\n  {:added \"1.0\"}\n  [& body]\n    (list 'new 'clojure.lang.Delay (list* `^{:once true} fn* [] body)))", :column 1, :line 738, :macro true, :arglists ([& body]), :doc "Takes a body of expressions and yields a Delay object that will\n  invoke the body only the first time it is forced (with force or deref/@), and\n  will cache the result and return it on all subsequent force\n  calls. See also - realized?", :namespace "clojure.core"}