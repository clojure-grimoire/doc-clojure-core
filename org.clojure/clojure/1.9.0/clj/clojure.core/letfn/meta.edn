{:added "1.0", :ns #object[clojure.lang.Namespace 0x264888e7 "clojure.core"], :name "letfn", :special-form true, :file "clojure/core.clj", :type :macro, :src "(defmacro letfn \n  \"fnspec ==> (fname [params*] exprs) or (fname ([params*] exprs)+)\n\n  Takes a vector of function specs and a body, and generates a set of\n  bindings of functions to their names. All of the names are available\n  in all of the definitions of the functions, as well as the body.\"\n  {:added \"1.0\", :forms '[(letfn [fnspecs*] exprs*)],\n   :special-form true, :url nil}\n  [fnspecs & body] \n  `(letfn* ~(vec (interleave (map first fnspecs) \n                             (map #(cons `fn %) fnspecs)))\n           ~@body))", :column 1, :line 6463, :macro true, :url nil, :arglists ([fnspecs & body]), :doc "fnspec ==> (fname [params*] exprs) or (fname ([params*] exprs)+)\n\n  Takes a vector of function specs and a body, and generates a set of\n  bindings of functions to their names. All of the names are available\n  in all of the definitions of the functions, as well as the body.", :namespace "clojure.core", :forms [(letfn [fnspecs*] exprs*)]}