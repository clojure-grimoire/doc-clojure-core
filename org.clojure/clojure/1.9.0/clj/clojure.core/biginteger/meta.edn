{:added "1.0", :ns #object[clojure.lang.Namespace 0x264888e7 "clojure.core"], :name "biginteger", :file "clojure/core.clj", :static true, :type :fn, :src "(defn biginteger\n  \"Coerce to BigInteger\"\n  {:tag BigInteger\n   :added \"1.0\"\n   :static true}\n  [x] (cond\n       (instance? BigInteger x) x\n       (instance? clojure.lang.BigInt x) (.toBigInteger ^clojure.lang.BigInt x)\n       (decimal? x) (.toBigInteger ^BigDecimal x)\n       (float? x) (.toBigInteger (. BigDecimal valueOf (double x)))\n       (ratio? x) (.bigIntegerValue ^clojure.lang.Ratio x)\n       (number? x) (BigInteger/valueOf (long x))\n       :else (BigInteger. x)))", :column 1, :line 3625, :tag java.math.BigInteger, :arglists ([x]), :doc "Coerce to BigInteger", :namespace "clojure.core"}