{:added "1.0", :ns #object[clojure.lang.Namespace 0x264888e7 "clojure.core"], :name "seq", :file "clojure/core.clj", :static true, :type :fn, :src "(def\n ^{:arglists '(^clojure.lang.ISeq [coll])\n   :doc \"Returns a seq on the collection. If the collection is\n    empty, returns nil.  (seq nil) returns nil. seq also works on\n    Strings, native Java arrays (of reference types) and any objects\n    that implement Iterable. Note that seqs cache values, thus seq\n    should not be used on any Iterable whose iterator repeatedly\n    returns the same mutable object.\"\n   :tag clojure.lang.ISeq\n   :added \"1.0\"\n   :static true}\n seq (fn ^:static seq ^clojure.lang.ISeq [coll] (. clojure.lang.RT (seq coll))))", :column 1, :line 126, :tag clojure.lang.ISeq, :arglists ([coll]), :doc "Returns a seq on the collection. If the collection is\n    empty, returns nil.  (seq nil) returns nil. seq also works on\n    Strings, native Java arrays (of reference types) and any objects\n    that implement Iterable. Note that seqs cache values, thus seq\n    should not be used on any Iterable whose iterator repeatedly\n    returns the same mutable object.", :namespace "clojure.core"}