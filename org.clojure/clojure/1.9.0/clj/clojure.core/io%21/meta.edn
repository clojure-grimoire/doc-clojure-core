{:added "1.0", :ns #object[clojure.lang.Namespace 0x264888e7 "clojure.core"], :name "io!", :file "clojure/core.clj", :type :macro, :src "(defmacro io!\n  \"If an io! block occurs in a transaction, throws an\n  IllegalStateException, else runs body in an implicit do. If the\n  first expression in body is a literal string, will use that as the\n  exception message.\"\n  {:added \"1.0\"}\n  [& body]\n  (let [message (when (string? (first body)) (first body))\n        body (if message (next body) body)]\n    `(if (clojure.lang.LockingTransaction/isRunning)\n       (throw (new IllegalStateException ~(or message \"I/O in transaction\")))\n       (do ~@body))))", :column 1, :line 2504, :macro true, :arglists ([& body]), :doc "If an io! block occurs in a transaction, throws an\n  IllegalStateException, else runs body in an implicit do. If the\n  first expression in body is a literal string, will use that as the\n  exception message.", :namespace "clojure.core"}