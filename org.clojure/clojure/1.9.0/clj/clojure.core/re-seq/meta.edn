{:added "1.0", :ns #object[clojure.lang.Namespace 0x264888e7 "clojure.core"], :name "re-seq", :file "clojure/core.clj", :static true, :type :fn, :src "(defn re-seq\n  \"Returns a lazy sequence of successive matches of pattern in string,\n  using java.util.regex.Matcher.find(), each such match processed with\n  re-groups.\"\n  {:added \"1.0\"\n   :static true}\n  [^java.util.regex.Pattern re s]\n  (let [m (re-matcher re s)]\n    ((fn step []\n       (when (. m (find))\n         (cons (re-groups m) (lazy-seq (step))))))))", :column 1, :line 4814, :arglists ([re s]), :doc "Returns a lazy sequence of successive matches of pattern in string,\n  using java.util.regex.Matcher.find(), each such match processed with\n  re-groups.", :namespace "clojure.core"}