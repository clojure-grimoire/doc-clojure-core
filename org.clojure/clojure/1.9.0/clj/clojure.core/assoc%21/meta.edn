{:added "1.1", :ns #object[clojure.lang.Namespace 0x264888e7 "clojure.core"], :name "assoc!", :file "clojure/core.clj", :static true, :type :fn, :src "(defn assoc!\n  \"When applied to a transient map, adds mapping of key(s) to\n  val(s). When applied to a transient vector, sets the val at index.\n  Note - index must be <= (count vector). Returns coll.\"\n  {:added \"1.1\"\n   :static true}\n  ([^clojure.lang.ITransientAssociative coll key val] (.assoc coll key val))\n  ([^clojure.lang.ITransientAssociative coll key val & kvs]\n   (let [ret (.assoc coll key val)]\n     (if kvs\n       (recur ret (first kvs) (second kvs) (nnext kvs))\n       ret))))", :column 1, :line 3360, :arglists ([coll key val] [coll key val & kvs]), :doc "When applied to a transient map, adds mapping of key(s) to\n  val(s). When applied to a transient vector, sets the val at index.\n  Note - index must be <= (count vector). Returns coll.", :namespace "clojure.core"}