{:added "1.0", :ns #object[clojure.lang.Namespace 0x264888e7 "clojure.core"], :name "if-let", :file "clojure/core.clj", :type :macro, :src "(defmacro if-let\n  \"bindings => binding-form test\n\n  If test is true, evaluates then with binding-form bound to the value of \n  test, if not, yields else\"\n  {:added \"1.0\"}\n  ([bindings then]\n   `(if-let ~bindings ~then nil))\n  ([bindings then else & oldform]\n   (assert-args\n     (vector? bindings) \"a vector for its binding\"\n     (nil? oldform) \"1 or 2 forms after binding vector\"\n     (= 2 (count bindings)) \"exactly 2 forms in binding vector\")\n   (let [form (bindings 0) tst (bindings 1)]\n     `(let [temp# ~tst]\n        (if temp#\n          (let [~form temp#]\n            ~then)\n          ~else)))))", :column 1, :line 1833, :macro true, :arglists ([bindings then] [bindings then else & oldform]), :doc "bindings => binding-form test\n\n  If test is true, evaluates then with binding-form bound to the value of \n  test, if not, yields else", :namespace "clojure.core"}