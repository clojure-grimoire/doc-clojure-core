{:added "1.0", :ns #object[clojure.lang.Namespace 0x264888e7 "clojure.core"], :name "max-key", :file "clojure/core.clj", :static true, :type :fn, :src "(defn max-key\n  \"Returns the x for which (k x), a number, is greatest.\n\n  If there are multiple such xs, the last one is returned.\"\n  {:added \"1.0\"\n   :static true}\n  ([k x] x)\n  ([k x y] (if (> (k x) (k y)) x y))\n  ([k x y & more]\n   (let [kx (k x) ky (k y)\n         [v kv] (if (> kx ky) [x kx] [y ky])]\n     (loop [v v kv kv more more]\n       (if more\n         (let [w (first more)\n               kw (k w)]\n           (if (>= kw kv)\n             (recur w kw (next more))\n             (recur v kv (next more))))\n         v)))))", :column 1, :line 4929, :arglists ([k x] [k x y] [k x y & more]), :doc "Returns the x for which (k x), a number, is greatest.\n\n  If there are multiple such xs, the last one is returned.", :namespace "clojure.core"}