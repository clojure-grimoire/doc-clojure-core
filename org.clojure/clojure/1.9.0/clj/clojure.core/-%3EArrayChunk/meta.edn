{:ns #object[clojure.lang.Namespace 0x264888e7 "clojure.core"], :name "->ArrayChunk", :file "clojure/gvec.clj", :type :fn, :src "(deftype ArrayChunk [^clojure.core.ArrayManager am arr ^int off ^int end]\n  \n  clojure.lang.Indexed\n  (nth [_ i] (.aget am arr (+ off i)))\n  \n  (count [_] (- end off))\n\n  clojure.lang.IChunk\n  (dropFirst [_]\n    (if (= off end)\n      (throw (IllegalStateException. \"dropFirst of empty chunk\"))\n      (new ArrayChunk am arr (inc off) end)))\n  \n  (reduce [_ f init]\n    (loop [ret init i off]\n      (if (< i end)\n        (let [ret (f ret (.aget am arr i))]\n          (if (reduced? ret)\n            ret\n            (recur ret (inc i))))\n        ret))))", :column 1, :line 36, :arglists ([am arr off end]), :doc "Positional factory function for class clojure.core.ArrayChunk.", :namespace "clojure.core"}