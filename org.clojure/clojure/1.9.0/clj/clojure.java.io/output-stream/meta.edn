{:added "1.2", :ns #object[clojure.lang.Namespace 0x6edfb42d "clojure.java.io"], :name "output-stream", :file "clojure/java/io.clj", :type :fn, :src "(defn ^OutputStream output-stream\n  \"Attempts to coerce its argument into an open java.io.OutputStream.\n   Default implementations always return a java.io.BufferedOutputStream.\n\n   Default implementations are defined for OutputStream, File, URI, URL,\n   Socket, and String arguments.\n\n   If the argument is a String, it tries to resolve it first as a URI, then\n   as a local file name.  URIs with a 'file' protocol are converted to\n   local file names.\n\n   Should be used inside with-open to ensure the OutputStream is\n   properly closed.\"\n  {:added \"1.2\"}\n  [x & opts]\n  (make-output-stream x (when opts (apply hash-map opts))))", :column 1, :line 138, :tag java.io.OutputStream, :arglists ([x & opts]), :doc "Attempts to coerce its argument into an open java.io.OutputStream.\n   Default implementations always return a java.io.BufferedOutputStream.\n\n   Default implementations are defined for OutputStream, File, URI, URL,\n   Socket, and String arguments.\n\n   If the argument is a String, it tries to resolve it first as a URI, then\n   as a local file name.  URIs with a 'file' protocol are converted to\n   local file names.\n\n   Should be used inside with-open to ensure the OutputStream is\n   properly closed.", :namespace "clojure.java.io"}