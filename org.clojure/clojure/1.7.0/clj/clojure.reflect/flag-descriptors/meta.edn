{:doc "The Java access bitflags, along with their friendly names and\nthe kinds of objects to which they can apply.", :line 71, :column 1, :file "clojure/reflect/java.clj", :name "flag-descriptors", :ns "clojure.reflect", :src "(def ^{:doc \"The Java access bitflags, along with their friendly names and\nthe kinds of objects to which they can apply.\"}\n  flag-descriptors\n  (vec\n   (map access-flag\n        [[:public 0x0001 :class :field :method]\n         [:private 0x002 :class :field :method]\n         [:protected 0x0004  :class :field :method]\n         [:static 0x0008  :field :method]\n         [:final 0x0010  :class :field :method]\n         ;; :super is ancient history and is unfindable (?) by\n         ;; reflection. skip it\n         #_[:super 0x0020  :class]        \n         [:synchronized 0x0020  :method]\n         [:volatile 0x0040  :field]\n         [:bridge 0x0040  :method]\n         [:varargs 0x0080  :method]\n         [:transient 0x0080  :field]\n         [:native 0x0100  :method]\n         [:interface 0x0200  :class]\n         [:abstract 0x0400  :class :method]\n         [:strict 0x0800  :method]\n         [:synthetic 0x1000  :class :field :method]\n         [:annotation 0x2000  :class]\n         [:enum 0x4000  :class :field :inner]])))", :type :var}