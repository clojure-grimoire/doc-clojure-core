{:added "1.0", :ns "clojure.core", :name "sort-by", :file "clojure/core.clj", :static true, :type :fn, :src "(defn sort-by\n  \"Returns a sorted sequence of the items in coll, where the sort\n  order is determined by comparing (keyfn item).  If no comparator is\n  supplied, uses compare.  comparator must implement\n  java.util.Comparator.  If coll is a Java array, it will be modified.\n  To avoid this, sort a copy of the array.\"\n  {:added \"1.0\"\n   :static true}\n  ([keyfn coll]\n   (sort-by keyfn compare coll))\n  ([keyfn ^java.util.Comparator comp coll]\n   (sort (fn [x y] (. comp (compare (keyfn x) (keyfn y)))) coll)))", :column 1, :line 2987, :arglists ([keyfn coll] [keyfn comp coll]), :doc "Returns a sorted sequence of the items in coll, where the sort\n  order is determined by comparing (keyfn item).  If no comparator is\n  supplied, uses compare.  comparator must implement\n  java.util.Comparator.  If coll is a Java array, it will be modified.\n  To avoid this, sort a copy of the array."}