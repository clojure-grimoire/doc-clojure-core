{:arglists ([request-prompt request-exit]), :doc "Default :read hook for repl. Reads from *in* which must either be an\n  instance of LineNumberingPushbackReader or duplicate its behavior of both\n  supporting .unread and collapsing all of CR, LF, and CRLF into a single\n  \\newline. repl-read:\n    - skips whitespace, then\n      - returns request-prompt on start of line, or\n      - returns request-exit on end of stream, or\n      - reads an object from the input stream, then\n        - skips the next input character if it's end of line, then\n        - returns the object.", :line 126, :column 1, :file "clojure/main.clj", :name "repl-read", :ns "clojure.main", :src "(defn repl-read\n  \"Default :read hook for repl. Reads from *in* which must either be an\n  instance of LineNumberingPushbackReader or duplicate its behavior of both\n  supporting .unread and collapsing all of CR, LF, and CRLF into a single\n  \\\\newline. repl-read:\n    - skips whitespace, then\n      - returns request-prompt on start of line, or\n      - returns request-exit on end of stream, or\n      - reads an object from the input stream, then\n        - skips the next input character if it's end of line, then\n        - returns the object.\"\n  [request-prompt request-exit]\n  (or ({:line-start request-prompt :stream-end request-exit}\n       (skip-whitespace *in*))\n      (let [input (read)]\n        (skip-if-eol *in*)\n        input)))", :type :fn}