{:added "1.0", :ns "clojure.core", :name "definline", :file "clojure/core.clj", :type :macro, :src "(defmacro definline\n  \"Experimental - like defmacro, except defines a named function whose\n  body is the expansion, calls to which may be expanded inline as if\n  it were a macro. Cannot be used with variadic (&) args.\"\n  {:added \"1.0\"}\n  [name & decl]\n  (let [[pre-args [args expr]] (split-with (comp not vector?) decl)]\n    `(do\n       (defn ~name ~@pre-args ~args ~(apply (eval (list `fn args expr)) args))\n       (alter-meta! (var ~name) assoc :inline (fn ~name ~args ~expr))\n       (var ~name))))", :column 1, :line 4897, :macro true, :arglists ([name & decl]), :doc "Experimental - like defmacro, except defines a named function whose\n  body is the expansion, calls to which may be expanded inline as if\n  it were a macro. Cannot be used with variadic (&) args."}