{:added "1.7", :ns "clojure.core", :name "dedupe", :file "clojure/core.clj", :type :fn, :src "(defn dedupe\n  \"Returns a lazy sequence removing consecutive duplicates in coll.\n  Returns a transducer when no collection is provided.\"\n  {:added \"1.7\"}\n  ([]\n   (fn [f1]\n     (let [pa (atom ::none)]\n       (fn\n         ([] (f1))\n         ([result] (f1 result))\n         ([result input]\n            (let [prior @pa]\n              (reset! pa input)\n              (if (= prior input)\n                result\n                (f1 result input))))))))\n  ([coll] (sequence (dedupe) coll)))", :column 1, :line 7173, :arglists ([] [coll]), :doc "Returns a lazy sequence removing consecutive duplicates in coll.\n  Returns a transducer when no collection is provided."}