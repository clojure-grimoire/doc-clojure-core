{:added "1.0", :ns "clojure.core", :name "merge", :file "clojure/core.clj", :static true, :type :fn, :src "(defn merge\n  \"Returns a map that consists of the rest of the maps conj-ed onto\n  the first.  If a key occurs in more than one map, the mapping from\n  the latter (left-to-right) will be the mapping in the result.\"\n  {:added \"1.0\"\n   :static true}\n  [& maps]\n  (when (some identity maps)\n    (reduce1 #(conj (or %1 {}) %2) maps)))", :column 1, :line 2852, :arglists ([& maps]), :doc "Returns a map that consists of the rest of the maps conj-ed onto\n  the first.  If a key occurs in more than one map, the mapping from\n  the latter (left-to-right) will be the mapping in the result."}