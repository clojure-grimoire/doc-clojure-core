{:type :fn, :src "(defn proxy-name\n {:tag String} \n [^Class super interfaces]\n  (let [inames (into1 (sorted-set) (map #(.getName ^Class %) interfaces))]\n    (apply str (.replace (str *ns*) \\- \\_) \".proxy\"\n      (interleave (repeat \"$\")\n        (concat\n          [(.getName super)]\n          (map #(subs % (inc (.lastIndexOf ^String % \".\"))) inames)\n          [(Integer/toHexString (hash inames))])))))", :ns "clojure.core", :name "proxy-name", :file "clojure/core_proxy.clj", :column 1, :line 34, :tag java.lang.String, :arglists ([super interfaces])}