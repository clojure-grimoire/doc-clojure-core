{:added "1.0", :ns "clojure.core", :name "subvec", :file "clojure/core.clj", :static true, :type :fn, :src "(defn subvec\n  \"Returns a persistent vector of the items in vector from\n  start (inclusive) to end (exclusive).  If end is not supplied,\n  defaults to (count vector). This operation is O(1) and very fast, as\n  the resulting vector shares structure with the original and no\n  trimming is done.\"\n  {:added \"1.0\"\n   :static true}\n  ([v start]\n   (subvec v start (count v)))\n  ([v start end]\n   (. clojure.lang.RT (subvec v start end))))", :column 1, :line 3602, :arglists ([v start] [v start end]), :doc "Returns a persistent vector of the items in vector from\n  start (inclusive) to end (exclusive).  If end is not supplied,\n  defaults to (count vector). This operation is O(1) and very fast, as\n  the resulting vector shares structure with the original and no\n  trimming is done."}