{:added "1.0", :ns "clojure.core", :name "underive", :file "clojure/core.clj", :type :fn, :src "(defn underive\n  \"Removes a parent/child relationship between parent and\n  tag. h must be a hierarchy obtained from make-hierarchy, if not\n  supplied defaults to, and modifies, the global hierarchy.\"\n  {:added \"1.0\"}\n  ([tag parent] (alter-var-root #'global-hierarchy underive tag parent) nil)\n  ([h tag parent]\n    (let [parentMap (:parents h)\n\t  childsParents (if (parentMap tag)\n\t\t\t  (disj (parentMap tag) parent) #{})\n\t  newParents (if (not-empty childsParents)\n\t\t       (assoc parentMap tag childsParents)\n\t\t       (dissoc parentMap tag))\n\t  deriv-seq (flatten (map #(cons (key %) (interpose (key %) (val %)))\n\t\t\t\t       (seq newParents)))]\n      (if (contains? (parentMap tag) parent)\n\t(reduce1 #(apply derive %1 %2) (make-hierarchy)\n\t\t(partition 2 deriv-seq))\n\th))))", :column 1, :line 5427, :arglists ([tag parent] [h tag parent]), :doc "Removes a parent/child relationship between parent and\n  tag. h must be a hierarchy obtained from make-hierarchy, if not\n  supplied defaults to, and modifies, the global hierarchy."}