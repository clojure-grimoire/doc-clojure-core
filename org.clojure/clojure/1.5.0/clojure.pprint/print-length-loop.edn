{:arglists ([bindings & body]), :ns "clojure.pprint", :name "print-length-loop", :src "(defmacro print-length-loop\n  \"A version of loop that iterates at most *print-length* times. This is designed \nfor use in pretty-printer dispatch functions.\"\n  {:added \"1.3\"}\n  [bindings & body]\n  (let [count-var (gensym \"length-count\")\n        mod-body (pll-mod-body count-var body)]\n    `(loop ~(apply vector count-var 0 bindings)\n       (if (or (not *print-length*) (< ~count-var *print-length*))\n         (do ~@mod-body)\n         (.write ^java.io.Writer *out* \"...\")))))", :column 1, :added "1.3", :type :macro, :doc "A version of loop that iterates at most *print-length* times. This is designed \nfor use in pretty-printer dispatch functions.", :macro true, :line 391, :file "clojure/pprint/pprint_base.clj"}