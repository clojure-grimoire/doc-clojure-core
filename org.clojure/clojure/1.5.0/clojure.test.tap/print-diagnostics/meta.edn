{:type :fn, :src "(defn print-diagnostics [data]\n  (when (seq t/*testing-contexts*)\n    (print-tap-diagnostic (t/testing-contexts-str)))\n  (when (:message data)\n    (print-tap-diagnostic (:message data)))\n  (print-tap-diagnostic (str \"expected:\" (pr-str (:expected data))))\n  (if (= :pass (:type data))\n    (print-tap-diagnostic (str \"  actual:\" (pr-str (:actual data))))\n    (do\n      (print-tap-diagnostic\n       (str \"  actual:\"\n        (with-out-str\n          (if (instance? Throwable (:actual data))\n            (stack/print-cause-trace (:actual data) t/*stack-trace-depth*)\n            (prn (:actual data)))))))))", :ns "clojure.test.tap", :name "print-diagnostics", :arglists ([data]), :column 1, :line 78, :file "clojure/test/tap.clj"}