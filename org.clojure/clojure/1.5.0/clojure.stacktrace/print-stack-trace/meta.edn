{:arglists ([tr] [tr n]), :ns "clojure.stacktrace", :name "print-stack-trace", :src "(defn print-stack-trace\n  \"Prints a Clojure-oriented stack trace of tr, a Throwable.\n  Prints a maximum of n stack frames (default: unlimited).\n  Does not print chained exceptions (causes).\"\n  {:added \"1.1\"}\n  ([tr] (print-stack-trace tr nil))\n  ([tr n]\n     (let [st (.getStackTrace tr)]\n       (print-throwable tr)\n       (newline)\n       (print \" at \") \n       (print-trace-element (first st))\n       (newline)\n       (doseq [e (if (nil? n)\n\t\t   (rest st)\n\t\t   (take (dec n) (rest st)))]\n\t (print \"    \")\n\t (print-trace-element e)\n\t (newline)))))", :column 1, :added "1.1", :type :fn, :doc "Prints a Clojure-oriented stack trace of tr, a Throwable.\n  Prints a maximum of n stack frames (default: unlimited).\n  Does not print chained exceptions (causes).", :line 44, :file "clojure/stacktrace.clj"}