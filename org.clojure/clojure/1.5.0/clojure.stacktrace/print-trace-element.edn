{:arglists ([e]), :ns "clojure.stacktrace", :name "print-trace-element", :src "(defn print-trace-element\n  \"Prints a Clojure-oriented view of one element in a stack trace.\"\n  {:added \"1.1\"}\n  [e]\n  (let [class (.getClassName e)\n\tmethod (.getMethodName e)] \n    (let [match (re-matches #\"^([A-Za-z0-9_.-]+)\\$(\\w+)__\\d+$\" (str class))]\n      (if (and match (= \"invoke\" method))\n\t(apply printf \"%s/%s\" (rest match))\n\t(printf \"%s.%s\" class method))))\n  (printf \" (%s:%d)\" (or (.getFileName e) \"\") (.getLineNumber e)))", :column 1, :added "1.1", :type :fn, :doc "Prints a Clojure-oriented view of one element in a stack trace.", :line 26, :file "clojure/stacktrace.clj"}