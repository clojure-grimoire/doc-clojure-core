{:type :fn, :src "(deftype JavaReflector [classloader]\n  Reflector\n  (do-reflect [_ typeref]\n           (let [cls (Class/forName (typename typeref) false classloader)]\n             {:bases (not-empty (set (map typesym (bases cls))))\n              :flags (parse-flags (.getModifiers cls) :class)\n              :members (set/union (declared-fields cls)\n                                  (declared-methods cls)\n                                  (declared-constructors cls))})))", :ns "clojure.reflect", :name "->JavaReflector", :arglists ([classloader]), :column 1, :doc "Positional factory function for class clojure.reflect.JavaReflector.", :line 166, :file "clojure/reflect/java.clj"}