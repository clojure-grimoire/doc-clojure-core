{:arglists ([expr & forms]), :ns "clojure.core", :name "some->", :src "(defmacro some->\n  \"When expr is not nil, threads it into the first form (via ->),\n  and when that result is not nil, through the next etc\"\n  {:added \"1.5\"}\n  [expr & forms]\n  (let [g (gensym)\n        pstep (fn [step] `(if (nil? ~g) nil (-> ~g ~step)))]\n    `(let [~g ~expr\n           ~@(interleave (repeat g) (map pstep forms))]\n       ~g)))", :column 1, :added "1.5", :type :macro, :doc "When expr is not nil, threads it into the first form (via ->),\n  and when that result is not nil, through the next etc", :macro true, :line 6813, :file "clojure/core.clj"}