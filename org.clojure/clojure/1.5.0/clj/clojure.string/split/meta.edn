{:arglists ([s re] [s re limit]), :ns "clojure.string", :name "split", :src "(defn split\n  \"Splits string on a regular expression.  Optional argument limit is\n  the maximum number of splits. Not lazy. Returns vector of the splits.\"\n  {:added \"1.2\"}\n  ([^CharSequence s ^Pattern re]\n     (LazilyPersistentVector/createOwning (.split re s)))\n  ([ ^CharSequence s ^Pattern re limit]\n     (LazilyPersistentVector/createOwning (.split re s limit))))", :column 1, :added "1.2", :type :fn, :doc "Splits string on a regular expression.  Optional argument limit is\n  the maximum number of splits. Not lazy. Returns vector of the splits.", :line 217, :file "clojure/string.clj"}