{:arglists ([argv expr & args]), :ns "clojure.test", :name "are", :src "(defmacro are\n  \"Checks multiple assertions with a template expression.\n  See clojure.template/do-template for an explanation of\n  templates.\n\n  Example: (are [x y] (= x y)  \n                2 (+ 1 1)\n                4 (* 2 2))\n  Expands to: \n           (do (is (= 2 (+ 1 1)))\n               (is (= 4 (* 2 2))))\n\n  Note: This breaks some reporting features, such as line numbers.\"\n  {:added \"1.1\"}\n  [argv expr & args]\n  (if (or\n       ;; (are [] true) is meaningless but ok\n       (and (empty? argv) (empty? args))\n       ;; Catch wrong number of args\n       (and (pos? (count argv))\n            (pos? (count args))\n            (zero? (mod (count args) (count argv)))))\n    `(temp/do-template ~argv (is ~expr) ~@args)\n    (throw (IllegalArgumentException. \"The number of args doesn't match are's argv.\"))))", :column 1, :added "1.1", :type :macro, :doc "Checks multiple assertions with a template expression.\n  See clojure.template/do-template for an explanation of\n  templates.\n\n  Example: (are [x y] (= x y)  \n                2 (+ 1 1)\n                4 (* 2 2))\n  Expands to: \n           (do (is (= 2 (+ 1 1)))\n               (is (= 4 (* 2 2))))\n\n  Note: This breaks some reporting features, such as line numbers.", :macro true, :line 556, :file "clojure/test.clj"}