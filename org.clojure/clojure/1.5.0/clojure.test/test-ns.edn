{:arglists ([ns]), :ns "clojure.test", :name "test-ns", :src "(defn test-ns\n  \"If the namespace defines a function named test-ns-hook, calls that.\n  Otherwise, calls test-all-vars on the namespace.  'ns' is a\n  namespace object or a symbol.\n\n  Internally binds *report-counters* to a ref initialized to\n  *inital-report-counters*.  Returns the final, dereferenced state of\n  *report-counters*.\"\n  {:added \"1.1\"}\n  [ns]\n  (binding [*report-counters* (ref *initial-report-counters*)]\n    (let [ns-obj (the-ns ns)]\n      (do-report {:type :begin-test-ns, :ns ns-obj})\n      ;; If the namespace has a test-ns-hook function, call that:\n      (if-let [v (find-var (symbol (str (ns-name ns-obj)) \"test-ns-hook\"))]\n\t((var-get v))\n        ;; Otherwise, just test every var in the namespace.\n        (test-all-vars ns-obj))\n      (do-report {:type :end-test-ns, :ns ns-obj}))\n    @*report-counters*))", :column 1, :added "1.1", :type :fn, :doc "If the namespace defines a function named test-ns-hook, calls that.\n  Otherwise, calls test-all-vars on the namespace.  'ns' is a\n  namespace object or a symbol.\n\n  Internally binds *report-counters* to a ref initialized to\n  *inital-report-counters*.  Returns the final, dereferenced state of\n  *report-counters*.", :line 719, :file "clojure/test.clj"}