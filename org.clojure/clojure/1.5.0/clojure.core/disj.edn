{:arglists ([set] [set key] [set key & ks]), :ns "clojure.core", :name "disj", :src "(defn disj\n  \"disj[oin]. Returns a new set of the same (hashed/sorted) type, that\n  does not contain key(s).\"\n  {:added \"1.0\"\n   :static true}\n  ([set] set)\n  ([^clojure.lang.IPersistentSet set key]\n   (when set\n     (. set (disjoin key))))\n  ([set key & ks]\n   (when set\n     (let [ret (disj set key)]\n       (if ks\n         (recur ret (first ks) (next ks))\n         ret)))))", :column 1, :added "1.0", :static true, :type :fn, :doc "disj[oin]. Returns a new set of the same (hashed/sorted) type, that\n  does not contain key(s).", :line 1428, :file "clojure/core.clj"}