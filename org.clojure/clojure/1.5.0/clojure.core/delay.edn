{:arglists ([& body]), :ns "clojure.core", :name "delay", :src "(defmacro delay\n  \"Takes a body of expressions and yields a Delay object that will\n  invoke the body only the first time it is forced (with force or deref/@), and\n  will cache the result and return it on all subsequent force\n  calls. See also - realized?\"\n  {:added \"1.0\"}\n  [& body]\n    (list 'new 'clojure.lang.Delay (list* `^{:once true} fn* [] body)))", :column 1, :added "1.0", :type :macro, :doc "Takes a body of expressions and yields a Delay object that will\n  invoke the body only the first time it is forced (with force or deref/@), and\n  will cache the result and return it on all subsequent force\n  calls. See also - realized?", :macro true, :line 698, :file "clojure/core.clj"}