{:arglists ([flags-ignored-for-now & body]), :ns "clojure.core", :name "sync", :src "(defmacro sync\n  \"transaction-flags => TBD, pass nil for now\n\n  Runs the exprs (in an implicit do) in a transaction that encompasses\n  exprs and any nested calls.  Starts a transaction if none is already\n  running on this thread. Any uncaught exception will abort the\n  transaction and flow out of sync. The exprs may be run more than\n  once, but any effects on Refs will be atomic.\"\n  {:added \"1.0\"}\n  [flags-ignored-for-now & body]\n  `(. clojure.lang.LockingTransaction\n      (runInTransaction (fn [] ~@body))))", :column 1, :added "1.0", :type :macro, :doc "transaction-flags => TBD, pass nil for now\n\n  Runs the exprs (in an implicit do) in a transaction that encompasses\n  exprs and any nested calls.  Starts a transaction if none is already\n  running on this thread. Any uncaught exception will abort the\n  transaction and flow out of sync. The exprs may be run more than\n  once, but any effects on Refs will be atomic.", :macro true, :line 2289, :file "clojure/core.clj"}