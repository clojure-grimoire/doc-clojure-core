{:arglists ([coll] [comp coll]), :ns "clojure.core", :name "sort", :src "(defn sort\n  \"Returns a sorted sequence of the items in coll. If no comparator is\n  supplied, uses compare.  comparator must implement\n  java.util.Comparator.  If coll is a Java array, it will be modified.\n  To avoid this, sort a copy of the array.\"\n  {:added \"1.0\"\n   :static true}\n  ([coll]\n   (sort compare coll))\n  ([^java.util.Comparator comp coll]\n   (if (seq coll)\n     (let [a (to-array coll)]\n       (. java.util.Arrays (sort a comp))\n       (seq a))\n     ())))", :column 1, :added "1.0", :static true, :type :fn, :doc "Returns a sorted sequence of the items in coll. If no comparator is\n  supplied, uses compare.  comparator must implement\n  java.util.Comparator.  If coll is a Java array, it will be modified.\n  To avoid this, sort a copy of the array.", :line 2742, :file "clojure/core.clj"}