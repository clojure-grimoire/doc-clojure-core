{:arglists ([smap coll]), :ns "clojure.core", :name "replace", :src "(defn replace\n  \"Given a map of replacement pairs and a vector/collection, returns a\n  vector/seq with any elements = a key in smap replaced with the\n  corresponding val in smap\"\n  {:added \"1.0\"\n   :static true}\n  [smap coll]\n    (if (vector? coll)\n      (reduce1 (fn [v i]\n                (if-let [e (find smap (nth v i))]\n                        (assoc v i (val e))\n                        v))\n              coll (range (count coll)))\n      (map #(if-let [e (find smap %)] (val e) %) coll)))", :column 1, :added "1.0", :static true, :type :fn, :doc "Given a map of replacement pairs and a vector/collection, returns a\n  vector/seq with any elements = a key in smap replaced with the\n  corresponding val in smap", :line 4554, :file "clojure/core.clj"}