{:arglists ([bindings & body]), :ns "clojure.core", :name "dotimes", :src "(defmacro dotimes\n  \"bindings => name n\n\n  Repeatedly executes body (presumably for side-effects) with name\n  bound to integers from 0 through n-1.\"\n  {:added \"1.0\"}\n  [bindings & body]\n  (assert-args\n     (vector? bindings) \"a vector for its binding\"\n     (= 2 (count bindings)) \"exactly 2 forms in binding vector\")\n  (let [i (first bindings)\n        n (second bindings)]\n    `(let [n# (long ~n)]\n       (loop [~i 0]\n         (when (< ~i n#)\n           ~@body\n           (recur (unchecked-inc ~i)))))))", :column 1, :added "1.0", :type :macro, :doc "bindings => name n\n\n  Repeatedly executes body (presumably for side-effects) with name\n  bound to integers from 0 through n-1.", :macro true, :line 2951, :file "clojure/core.clj"}