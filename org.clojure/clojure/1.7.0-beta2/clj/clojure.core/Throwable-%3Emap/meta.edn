{:arglists ([o]), :line 416, :column 1, :file "clojure/core_print.clj", :name "Throwable->map", :ns "clojure.core", :src "(defn Throwable->map [^Throwable o]\n  (let [base (fn [^Throwable t]\n               {:type (class t)\n                :message (.getLocalizedMessage t)\n                :at (get (.getStackTrace t) 0)})\n        via (loop [via [], ^Throwable t o]\n              (if t\n                (recur (conj via t) (.getCause t))\n                via))] \n    {:cause (.getLocalizedMessage ^Throwable (last via))\n           :via (vec (map base via))\n           :trace (vec (.getStackTrace (or ^Throwable (last via) o)))}))", :type :fn}