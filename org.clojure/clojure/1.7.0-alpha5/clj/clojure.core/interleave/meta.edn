{:added "1.0", :ns "clojure.core", :name "interleave", :file "clojure/core.clj", :static true, :type :fn, :src "(defn interleave\n  \"Returns a lazy seq of the first item in each coll, then the second etc.\"\n  {:added \"1.0\"\n   :static true}\n  ([] ())\n  ([c1] (lazy-seq c1))\n  ([c1 c2]\n     (lazy-seq\n      (let [s1 (seq c1) s2 (seq c2)]\n        (when (and s1 s2)\n          (cons (first s1) (cons (first s2) \n                                 (interleave (rest s1) (rest s2))))))))\n  ([c1 c2 & colls] \n     (lazy-seq \n      (let [ss (map seq (conj colls c2 c1))]\n        (when (every? identity ss)\n          (concat (map first ss) (apply interleave (map rest ss))))))))", :column 1, :line 4139, :arglists ([] [c1] [c1 c2] [c1 c2 & colls]), :doc "Returns a lazy seq of the first item in each coll, then the second etc."}