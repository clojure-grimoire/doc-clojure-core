{:added "1.0", :ns "clojure.core", :name "lazy-cat", :file "clojure/core.clj", :type :macro, :src "(defmacro lazy-cat\n  \"Expands to code which yields a lazy sequence of the concatenation\n  of the supplied colls.  Each coll expr is not evaluated until it is\n  needed. \n\n  (lazy-cat xs ys zs) === (concat (lazy-seq xs) (lazy-seq ys) (lazy-seq zs))\"\n  {:added \"1.0\"}\n  [& colls]\n  `(concat ~@(map #(list `lazy-seq %) colls)))", :column 1, :line 4418, :macro true, :arglists ([& colls]), :doc "Expands to code which yields a lazy sequence of the concatenation\n  of the supplied colls.  Each coll expr is not evaluated until it is\n  needed. \n\n  (lazy-cat xs ys zs) === (concat (lazy-seq xs) (lazy-seq ys) (lazy-seq zs))"}