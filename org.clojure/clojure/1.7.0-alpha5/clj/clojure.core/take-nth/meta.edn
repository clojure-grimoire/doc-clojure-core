{:added "1.0", :ns "clojure.core", :name "take-nth", :file "clojure/core.clj", :static true, :type :fn, :src "(defn take-nth\n  \"Returns a lazy seq of every nth item in coll.  Returns a stateful\n  transducer when no collection is provided.\"\n  {:added \"1.0\"\n   :static true}\n  ([n]\n     (fn [rf]\n       (let [iv (volatile! -1)]\n         (fn\n           ([] (rf))\n           ([result] (rf result))\n           ([result input]\n              (let [i (vswap! iv inc)]\n                (if (zero? (rem i n))\n                  (rf result input)\n                  result)))))))\n  ([n coll]\n     (lazy-seq\n      (when-let [s (seq coll)]\n        (cons (first s) (take-nth n (drop n s)))))))", :column 1, :line 4118, :arglists ([n] [n coll]), :doc "Returns a lazy seq of every nth item in coll.  Returns a stateful\n  transducer when no collection is provided."}