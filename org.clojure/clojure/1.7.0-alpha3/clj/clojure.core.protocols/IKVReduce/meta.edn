{:type :var, :src "(defprotocol IKVReduce\n  \"Protocol for concrete associative types that can reduce themselves\n   via a function of key and val faster than first/next recursion over map\n   entries. Called by clojure.core/reduce-kv, and has same\n   semantics (just different arg order).\"\n  (kv-reduce [amap f init]))", :doc "Protocol for concrete associative types that can reduce themselves\n   via a function of key and val faster than first/next recursion over map\n   entries. Called by clojure.core/reduce-kv, and has same\n   semantics (just different arg order).", :ns "clojure.core.protocols", :name "IKVReduce", :file "clojure/core/protocols.clj", :column 1, :line 185}