{:added "1.2", :ns "clojure.java.io", :name "input-stream", :file "clojure/java/io.clj", :type :fn, :src "(defn ^InputStream input-stream\n  \"Attempts to coerce its argument into an open java.io.InputStream.\n   Default implementations always return a java.io.BufferedInputStream.\n\n   Default implementations are defined for InputStream, File, URI, URL,\n   Socket, byte array, and String arguments.\n\n   If the argument is a String, it tries to resolve it first as a URI, then\n   as a local file name.  URIs with a 'file' protocol are converted to\n   local file names.\n\n   Should be used inside with-open to ensure the InputStream is properly\n   closed.\"\n  {:added \"1.2\"}\n  [x & opts]\n  (make-input-stream x (when opts (apply hash-map opts))))", :column 1, :line 121, :tag java.io.InputStream, :arglists ([x & opts]), :doc "Attempts to coerce its argument into an open java.io.InputStream.\n   Default implementations always return a java.io.BufferedInputStream.\n\n   Default implementations are defined for InputStream, File, URI, URL,\n   Socket, byte array, and String arguments.\n\n   If the argument is a String, it tries to resolve it first as a URI, then\n   as a local file name.  URIs with a 'file' protocol are converted to\n   local file names.\n\n   Should be used inside with-open to ensure the InputStream is properly\n   closed."}