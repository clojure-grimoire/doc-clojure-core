{:added "1.5", :ns "clojure.core", :name "some->>", :file "clojure/core.clj", :type :macro, :src "(defmacro some->>\n  \"When expr is not nil, threads it into the first form (via ->>),\n  and when that result is not nil, through the next etc\"\n  {:added \"1.5\"}\n  [expr & forms]\n  (let [g (gensym)\n        pstep (fn [step] `(if (nil? ~g) nil (->> ~g ~step)))]\n    `(let [~g ~expr\n           ~@(interleave (repeat g) (map pstep forms))]\n       ~g)))", :column 1, :line 7203, :macro true, :arglists ([expr & forms]), :doc "When expr is not nil, threads it into the first form (via ->>),\n  and when that result is not nil, through the next etc"}