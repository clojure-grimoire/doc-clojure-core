{:added "1.0", :ns "clojure.core", :name "with-precision", :file "clojure/core.clj", :type :macro, :src "(defmacro with-precision\n  \"Sets the precision and rounding mode to be used for BigDecimal operations.\n\n  Usage: (with-precision 10 (/ 1M 3))\n  or:    (with-precision 10 :rounding HALF_DOWN (/ 1M 3))\n\n  The rounding mode is one of CEILING, FLOOR, HALF_UP, HALF_DOWN,\n  HALF_EVEN, UP, DOWN and UNNECESSARY; it defaults to HALF_UP.\"\n  {:added \"1.0\"}\n  [precision & exprs]\n    (let [[body rm] (if (= (first exprs) :rounding)\n                      [(next (next exprs))\n                       `((. java.math.RoundingMode ~(second exprs)))]\n                      [exprs nil])]\n      `(binding [*math-context* (java.math.MathContext. ~precision ~@rm)]\n         ~@body)))", :column 1, :line 4807, :macro true, :arglists ([precision & exprs]), :doc "Sets the precision and rounding mode to be used for BigDecimal operations.\n\n  Usage: (with-precision 10 (/ 1M 3))\n  or:    (with-precision 10 :rounding HALF_DOWN (/ 1M 3))\n\n  The rounding mode is one of CEILING, FLOOR, HALF_UP, HALF_DOWN,\n  HALF_EVEN, UP, DOWN and UNNECESSARY; it defaults to HALF_UP."}