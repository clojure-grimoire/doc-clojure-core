{:added "1.0", :ns "clojure.core", :name "conj", :file "clojure/core.clj", :static true, :type :fn, :src "(def\n ^{:arglists '([coll x] [coll x & xs])\n   :doc \"conj[oin]. Returns a new collection with the xs\n    'added'. (conj nil item) returns (item).  The 'addition' may\n    happen at different 'places' depending on the concrete type.\"\n   :added \"1.0\"\n   :static true}\n conj (fn ^:static conj\n        ([] [])\n        ([coll] coll)\n        ([coll x] (. clojure.lang.RT (conj coll x)))\n        ([coll x & xs]\n         (if xs\n           (recur (conj coll x) (first xs) (next xs))\n           (conj coll x)))))", :column 1, :line 75, :arglists ([coll x] [coll x & xs]), :doc "conj[oin]. Returns a new collection with the xs\n    'added'. (conj nil item) returns (item).  The 'addition' may\n    happen at different 'places' depending on the concrete type."}