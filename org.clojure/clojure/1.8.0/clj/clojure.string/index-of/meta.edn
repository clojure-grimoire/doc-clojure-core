{:added "1.8", :ns "clojure.string", :name "index-of", :file "clojure/string.clj", :type :fn, :src "(defn index-of\n  \"Return index of value (string or char) in s, optionally searching\n  forward from from-index or nil if not found.\"\n  {:added \"1.8\"}\n  ([^CharSequence s value]\n  (let [result ^long\n        (if (instance? Character value)\n          (.indexOf (.toString s) ^int (.charValue ^Character value))\n          (.indexOf (.toString s) ^String value))]\n    (if (= result -1)\n      nil\n      result)))\n  ([^CharSequence s value ^long from-index]\n  (let [result ^long\n        (if (instance? Character value)\n          (.indexOf (.toString s) ^int (.charValue ^Character value) (unchecked-int from-index))\n          (.indexOf (.toString s) ^String value (unchecked-int from-index)))]\n    (if (= result -1)\n      nil\n      result))))", :column 1, :line 318, :arglists ([s value] [s value from-index]), :doc "Return index of value (string or char) in s, optionally searching\n  forward from from-index or nil if not found."}