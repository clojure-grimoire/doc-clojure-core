{:added "1.0", :ns "clojure.core", :name "intern", :file "clojure/core.clj", :static true, :type :fn, :src "(defn intern\n  \"Finds or creates a var named by the symbol name in the namespace\n  ns (which can be a symbol or a namespace), setting its root binding\n  to val if supplied. The namespace must exist. The var will adopt any\n  metadata from the name symbol.  Returns the var.\"\n  {:added \"1.0\"\n   :static true}\n  ([ns ^clojure.lang.Symbol name]\n     (let [v (clojure.lang.Var/intern (the-ns ns) name)]\n       (when (meta name) (.setMeta v (meta name)))\n       v))\n  ([ns name val]\n     (let [v (clojure.lang.Var/intern (the-ns ns) name val)]\n       (when (meta name) (.setMeta v (meta name)))\n       v)))", :column 1, :line 6071, :arglists ([ns name] [ns name val]), :doc "Finds or creates a var named by the symbol name in the namespace\n  ns (which can be a symbol or a namespace), setting its root binding\n  to val if supplied. The namespace must exist. The var will adopt any\n  metadata from the name symbol.  Returns the var."}