{:added "1.0", :ns "clojure.core", :name "pr", :file "clojure/core.clj", :type :var, :src "(defn pr\n  \"Prints the object(s) to the output stream that is the current value\n  of *out*.  Prints the object(s), separated by spaces if there is\n  more than one.  By default, pr and prn print in a way that objects\n  can be read by the reader\"\n  {:dynamic true\n   :added \"1.0\"}\n  ([] nil)\n  ([x]\n     (pr-on x *out*))\n  ([x & more]\n   (pr x)\n   (. *out* (append \\space))\n   (if-let [nmore (next more)]\n     (recur (first more) nmore)\n     (apply pr more))))", :column 1, :dynamic true, :line 3575, :arglists ([] [x] [x & more]), :doc "Prints the object(s) to the output stream that is the current value\n  of *out*.  Prints the object(s), separated by spaces if there is\n  more than one.  By default, pr and prn print in a way that objects\n  can be read by the reader"}