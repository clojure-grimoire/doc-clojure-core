{:arglists ([pf x c interf]), :line 560, :column 1, :file "clojure/core_deftype.clj", :name "-cache-protocol-fn", :ns "clojure.core", :src "(defn -cache-protocol-fn [^clojure.lang.AFunction pf x ^Class c ^clojure.lang.IFn interf]\n  (let [cache  (.__methodImplCache pf)\n        f (if (.isInstance c x)\n            interf \n            (find-protocol-method (.protocol cache) (.methodk cache) x))]\n    (when-not f\n      (throw (IllegalArgumentException. (str \"No implementation of method: \" (.methodk cache) \n                                             \" of protocol: \" (:var (.protocol cache)) \n                                             \" found for class: \" (if (nil? x) \"nil\" (.getName (class x)))))))\n    (set! (.__methodImplCache pf) (expand-method-impl-cache cache (class x) f))\n    f))", :type :fn}